---
export interface Props {
  recipe: {
    slug: string;
    data: {
      title: string;
      image?: string;
      prepTime?: string;
      cookTime?: string;
      servings?: string;
      difficulty?: string;
      tags?: string[];
    };
  };
  variant?: 'default' | 'link';
}

const { recipe, variant = 'default' } = Astro.props;
const recipeUrl = `${import.meta.env.BASE_URL}/recipes/${recipe.slug}/`;
const imageUrl = recipe.data.image?.startsWith('http') 
  ? recipe.data.image 
  : `${import.meta.env.BASE_URL}${recipe.data.image}`;
---

{variant === 'default' ? (
  <a href={recipeUrl} class="recipe-card">
    {recipe.data.image && (
      <div class="recipe-image">
        <img src={imageUrl} alt={recipe.data.title} />
      </div>
    )}
    <div class="recipe-card-content">
      <h3>{recipe.data.title}</h3>
      <div class="recipe-stats">
        {recipe.data.prepTime && <span><i class="fas fa-clock"></i> {recipe.data.prepTime}</span>}
        {recipe.data.cookTime && <span><i class="fas fa-fire"></i> {recipe.data.cookTime}</span>}
        {recipe.data.servings && <span><i class="fas fa-users"></i> {recipe.data.servings}</span>}
        {recipe.data.difficulty && <span><i class="fas fa-signal"></i> {recipe.data.difficulty}</span>}
      </div>
      {recipe.data.tags && recipe.data.tags.length > 0 && (
        <div class="recipe-tags">
          {recipe.data.tags.slice(0, 3).map(tag => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      )}
    </div>
  </a>
) : (
  <div class="recipe-card">
    {recipe.data.image && (
      <div class="recipe-image">
        <img src={imageUrl} alt={recipe.data.title} />
      </div>
    )}
    <div class="recipe-card-content">
      <h3>{recipe.data.title}</h3>
      <div class="recipe-stats">
        {recipe.data.prepTime && <span><i class="fas fa-clock"></i> {recipe.data.prepTime}</span>}
        {recipe.data.cookTime && <span><i class="fas fa-fire"></i> {recipe.data.cookTime}</span>}
        {recipe.data.servings && <span><i class="fas fa-users"></i> {recipe.data.servings}</span>}
        {recipe.data.difficulty && <span><i class="fas fa-signal"></i> {recipe.data.difficulty}</span>}
      </div>
      {recipe.data.tags && recipe.data.tags.length > 0 && (
        <div class="recipe-tags">
          {recipe.data.tags.map(tag => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      )}
    </div>
    <div class="recipe-card-footer">
      <a href={recipeUrl} class="recipe-link">
        View Recipe <i class="fas fa-arrow-right"></i>
      </a>
    </div>
  </div>
)}

<style>
  .recipe-card {
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    text-decoration: none;
    color: inherit;
    transition: all 0.3s ease;
    border: 1px solid rgba(143, 188, 143, 0.2);
    position: relative;
    display: block;
  }

  .recipe-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #8fbc8f, #d2b48c);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .recipe-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    border-color: rgba(143, 188, 143, 0.4);
  }

  .recipe-card:hover::before {
    opacity: 1;
  }

  .recipe-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
  }

  .recipe-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .recipe-card-content {
    padding: 1.5rem;
  }

  .recipe-card-content h3 {
    font-size: 1.3rem;
    color: #8fbc8f;
    margin-bottom: 1rem;
  }

  .recipe-stats {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .recipe-stats span {
    background: #cd853f;
    color: white;
    padding: 0.3rem 0.8rem;
    border-radius: 15px;
    font-size: 0.8rem;
    display: flex;
    align-items: center;
    gap: 0.3rem;
  }

  .recipe-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    background: #f5e6d3;
    color: #5d4037;
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 500;
  }

  .recipe-card-footer {
    border-top: 1px solid #eee;
    padding: 1rem 1.5rem;
  }

  .recipe-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    background: #8fbc8f;
    color: white;
    text-decoration: none;
    font-weight: 600;
    padding: 0.5rem 1rem;
    border-radius: 25px;
    transition: all 0.3s ease;
  }

  .recipe-link:hover {
    background: #7ba87b;
    transform: translateX(5px);
  }

  .recipe-link i {
    transition: transform 0.3s ease;
  }

  .recipe-link:hover i {
    transform: translateX(3px);
  }

  @media (max-width: 768px) {
    .recipe-card-content h3 {
      font-size: 1.1rem;
    }
  }
</style>

